package com.icloud.cfretz;

import java.util.HashMap;
import java.util.Stack;

import org.bukkit.ChatColor;
import org.bukkit.Location;
import org.bukkit.command.Command;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerQuitEvent;
import org.bukkit.event.player.PlayerTeleportEvent;
import org.bukkit.event.player.PlayerTeleportEvent.TeleportCause;
import org.bukkit.plugin.java.JavaPlugin;

public final class Back extends JavaPlugin implements Listener {
	
	HashMap<String, Stack<Location>> histories, futures;
	HashMap<String, Boolean> dirt;
	
	@Override
	public void onEnable() {
		getServer().getPluginManager().registerEvents(this, this);
		histories = new HashMap<String, Stack<Location>>();
		futures = new HashMap<String, Stack<Location>>();
		dirt = new HashMap<String, Boolean>();
	}
	
	@Override
	public void onDisable() {
		
	}
	
	public boolean onCommand(CommandSender sender, Command cmd, String label, String[] args) {
		if(sender instanceof Player) {
			Player player = (Player)sender;
			if(cmd.getName().equals("back")) {
				if(histories.containsKey(player.getName())) {
					Stack<Location> playerHistory = histories.get(player.getName());
					if(!playerHistory.isEmpty()) {
						dirt.put(player.getName(), new Boolean(true));
						player.teleport(playerHistory.pop());
						player.sendMessage(ChatColor.GREEN + "Haven't we been here before?");
					} else {
						player.sendMessage(ChatColor.RED + "Sorry, you appear to be out of previous locations. Try teleporting somewhere.");
					}
				} else {
					player.sendMessage(ChatColor.RED + "Sorry, you have no previous locations logged.");
				}
			} else {
				
			}
		} else {
			sender.sendMessage("This command is to be used by players only.");
		}
		return false;
	}
	
	@EventHandler
	public void onPlayerTeleport(PlayerTeleportEvent event) {
		Player teleporter = event.getPlayer();
		if(event.getCause() == TeleportCause.UNKNOWN) {
			return;
		}
		if(!dirt.containsKey(teleporter.getName()) || !dirt.get(teleporter.getName()).booleanValue()) {
			if(histories.containsKey(teleporter.getName())) {
				histories.get(teleporter.getName()).push(event.getFrom());
			} else {
				Stack<Location> history = new Stack<Location>();
				history.push(event.getFrom());
				histories.put(teleporter.getName(), history);
			}
		} else {
			if(dirt.containsKey(teleporter.getName())) {
				dirt.put(teleporter.getName(), new Boolean(false));
			}
		}
	}
	
	@EventHandler
	public void onPlayerQuit(PlayerQuitEvent event) {
		Player departed = event.getPlayer();
		if(histories.containsKey(departed.getName())) {
			histories.remove(player.getName());
		}
	}
	
}
